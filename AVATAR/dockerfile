# Use NVIDIA base image for GPU support
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu20.04

# Install Python 3.10 and dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-venv \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.10 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Create a non-root user 'docker'
RUN useradd -m -s /bin/bash docker

# Set working directory
WORKDIR /home/docker

# Create directories
RUN mkdir -p /home/docker/Wav2Lip /home/docker/source /home/docker/videos /home/docker/weights

# Copy project files
COPY API.py inference.py lipsync.py lipsync_test.py Wav2Lip_inference_patched.py requirements.txt /home/docker/
COPY Wav2Lip/ /home/docker/Wav2Lip/
COPY source/ /home/docker/source/
COPY weights/ /home/docker/weights/

# Change ownership to docker user
RUN chown -R docker:docker /home/docker

# Switch to docker user
USER docker

# Create virtual environment
RUN python3 -m venv /home/docker/venv

# Upgrade pip and install dependencies
RUN /home/docker/venv/bin/pip install --no-cache-dir --upgrade pip
RUN /home/docker/venv/bin/pip install --no-cache-dir -r requirements.txt

# Switch to root to set permissions
USER root
RUN chown -R docker:docker /home/docker /home/docker/venv
RUN chmod -R u+rwX /home/docker /home/docker/venv

# Switch back to docker user
USER docker

# Expose port (e.g., 8000 for API)
EXPOSE 8000

# Command to run the application (adjust based on your entry point)
CMD ["/home/docker/venv/bin/python", "API.py"]